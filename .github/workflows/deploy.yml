name: Pet's home


# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

runner-job:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
          # Label used to access the service container
      mysql:
            # Docker Hub image
            image: mysql
            # Provide the password for postgres
            env:
              MYSQL_DATABASE: 'pets_home'
              MYSQL_USER: root
              MYSQL_PASSWORD: password
              MYSQL_ROOT_PASSWORD: password
              MYSQL_HOST: 'mysql'
            # Set health checks to wait until postgres has started
            options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5
            restart: always
            command: --default-authentication-plugin=mysql_native_password
            ports:
              # Maps tcp port 5432 on service container to the host
              - 3306:3306

jobs:

  build:

    runs-on: ubuntu-latest
    env:
      EMAILPWD: ${EMAILPWD}
      MYSQL_HOST: 'mysql'
      MYSQL_PWD: 'password'
      Redis_Host: 'redis'
    steps:
      - uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          load: true
          tags: petshome:latest





   
  deploy:
    runs-on: ubuntu-latest
    env:
      EMAILPWD: ${EMAILPWD}
    steps:
      - name: Executing remote command
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSHKEY }}
          script: |

            
            cd IT-project-backend
            docker pull ${{secrets.DOCKER_HUB_USERNAME}}/petshome:latest
            docker run ${{secrets.DOCKER_HUB_USERNAME}}/petshome:latest

